# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
after-startup-command = [
  'exec-and-forget borders active_color=0xFFD357FE inactive_color=0x00494d64 width=8.0',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 150

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = [
  "move-mouse window-lazy-center",
  "move-mouse monitor-lazy-center",
]

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = [
  { monitor."built-in" = 16 },
  { monitor."secondary" = 32 },
  16,
]
inner.vertical = [{ monitor."built-in" = 16 }, { monitor."secondary" = 32 }, 16]
outer.left = [{ monitor."built-in" = 16 }, { monitor."secondary" = 32 }, 16]
outer.bottom = [{ monitor."built-in" = 16 }, { monitor."secondary" = 32 }, 16]
outer.top = [{ monitor."built-in" = 16 }, { monitor."secondary" = 32 }, 16]
outer.right = [{ monitor."built-in" = 16 }, { monitor."secondary" = 32 }, 16]

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift


alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

alt-h = 'focus --boundaries-action wrap-around-the-workspace left'
alt-j = 'focus --boundaries-action wrap-around-the-workspace down'
alt-k = 'focus --boundaries-action wrap-around-the-workspace up'
alt-l = 'focus --boundaries-action wrap-around-the-workspace right'
alt-f = 'fullscreen'

alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

alt-ctrl-h = ['join-with left']
alt-ctrl-j = ['join-with down']
alt-ctrl-k = ['join-with up']
alt-ctrl-l = ['join-with right']
alt-ctrl-f = ['layout floating tiling']
alt-ctrl-esc = ['reload-config', 'mode main']

alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

alt-1 = 'workspace --auto-back-and-forth 1'
alt-2 = 'workspace --auto-back-and-forth 2'
alt-3 = 'workspace --auto-back-and-forth 3'
alt-4 = 'workspace --auto-back-and-forth 4'
alt-5 = 'workspace --auto-back-and-forth 5'

alt-shift-1 = 'move-node-to-workspace 1 --focus-follows-window'
alt-shift-2 = 'move-node-to-workspace 2 --focus-follows-window'
alt-shift-3 = 'move-node-to-workspace 3 --focus-follows-window'
alt-shift-4 = 'move-node-to-workspace 4 --focus-follows-window'
alt-shift-5 = 'move-node-to-workspace 5 --focus-follows-window'

alt-tab = 'workspace-back-and-forth'
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

alt-shift-semicolon = 'mode service'

[workspace-to-monitor-force-assignment]

1 = ['secondary', 'main']
2 = ['secondary', 'main']
3 = ['secondary', 'main']
4 = ['secondary', 'main']
5 = ['main', 'secondary']


# 'service' binding mode declaration.
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']


[[on-window-detected]]
if.app-name-regex-substring = 'Outlook'
run = ['layout floating', 'move-node-to-workspace 4']

[[on-window-detected]]
if.app-name-regex-substring = 'Zoom'
run = ['layout floating', 'move-node-to-workspace 4']

[[on-window-detected]]
if.app-name-regex-substring = 'Finder'
run = ['layout floating']

[[on-window-detected]]
if.app-name-regex-substring = 'Ghostty'
run = ['layout floating', 'move-node-to-workspace 3']

[[on-window-detected]]
if.app-name-regex-substring = 'Craft'
if.app-id = 'com.lukilabs.lukiapp'
run = ['layout tiling', 'move-node-to-workspace 2']

[[on-window-detected]]
if.app-name-regex-substring = 'Slack'
run = ['layout tiling', 'move-node-to-workspace 4']

[[on-window-detected]]
if.app-name-regex-substring = 'Linear'
run = ['layout tiling', 'move-node-to-workspace 4']

[[on-window-detected]]
if.app-name-regex-substring = 'Cursor'
run = ['layout tiling', 'move-node-to-workspace 1']

[[on-window-detected]]
if.app-name-regex-substring = 'Warp'
run = ['layout tiling', 'move-node-to-workspace 3']

[[on-window-detected]]
if.app-name-regex-substring = 'Mail'
run = ['layout tiling', 'move-node-to-workspace 4']

[[on-window-detected]]
if.app-name-regex-substring = 'Calendar'
run = ['layout tiling', 'move-node-to-workspace 4']

# Floating
[[on-window-detected]]
check-further-callbacks = true
run = 'layout floating'
